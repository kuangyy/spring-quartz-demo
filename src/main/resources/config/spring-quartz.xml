<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.2.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-4.2.xsd">


    <!--&lt;!&ndash; 声明工厂 &ndash;&gt;-->
    <!--<bean id="scheduler" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="schedulerName" value="TestScheduler"/>-->
        <!--<property name="dataSource" ref="DataSource" />-->
        <!--<property name="configLocation" value="classpath*:config/quartz.properties" />-->
        <!--&lt;!&ndash;applicationContextSchedulerContextKey：-->
        <!--是org.springframework.scheduling.quartz.SchedulerFactoryBean这个类中-->
        <!--把spring上下 文以key/value的方式存放在了quartz的上下文中了，-->
        <!--可以用applicationContextSchedulerContextKey所定义的key得到对应的spring上下文&ndash;&gt;-->
        <!--<property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>-->
    <!--</bean>-->


    <context:component-scan base-package="cn.kykys.quartz" />

    <!-- quartz配置  动态配置所以我们将 Factory 作为一个service一样的接口 QuartzJobFactory.java-->
    <!-- 调度工厂 -->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    </bean>


</beans>